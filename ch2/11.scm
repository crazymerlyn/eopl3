(define (empty-env) '())
(define (empty-env? env) (null? env))
(define (extend-env var val env) (extend-env* (list var) (list val) env))
(define (extend-env* vars vals env)
  (cons (cons vars vals) env))
(define (apply-env env var)
  (if (empty-env? env)
      (error "No binding for" var)
      (let loop ((vars (caar env))
                 (vals (cdar env)))
        (if (null? vars)
            (apply-env (cdr env) var)
            (if (eq? var (car vars))
                (car vals)
                (loop (cdr vars) (cdr vals)))))))
